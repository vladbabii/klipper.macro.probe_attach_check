## https://github.com/vladbabii/klipper.macro.probe_attach_check
## v2
## Usage:
## PROBE_ATTACH_CHECK ATTACHED="MACRO_1_NAME" DETACHED="MACRO_2_NAME"
##
[gcode_macro PROBE_ATTACH_CHECK_NOW]
variable_use_probe: 0
variable_attached_default: "PROBE_ATTACH_CHECK_ACTION_ATTACHED"
variable_detached_default: "PROBE_ATTACH_CHECK_ACTION_DETACHED"
variable_attached: "PROBE_ATTACH_CHECK_ACTION_ATTACHED"
variable_detached: "PROBE_ATTACH_CHECK_ACTION_DETACHED"
gcode:
  M118 Probe check now variable storage

[gcode_macro PROBE_ATTACH_CHECK_ACTION_ATTACHED]
gcode:
  RESPOND PREFIX="info" MSG="Probe > attached!"

[gcode_macro PROBE_ATTACH_CHECK_ACTION_DETACHED]
gcode:
  RESPOND PREFIX="info" MSG="Probe > detached!"


[gcode_macro TEST11]
gcode:
  RESPOND PREFIX="info" MSG="Z endstop using: {printer.configfile.settings.stepper_z.endstop_pin}"
  RESPOND PREFIX="info" MSG="Z endstop using: {printer.probe.last_query}"

[gcode_macro PROBE_ATTACH_CHECK]
gcode:
  RESPOND PREFIX="info" MSG="Probe > Checking attachment status..." 
  ## set what action to run at then end of probe_check
  {% if params.ATTACHED is defined %}
    SET_GCODE_VARIABLE MACRO=PROBE_ATTACH_CHECK_NOW VARIABLE=attached VALUE="'{params.ATTACHED|string}'"
  {% else %}
    SET_GCODE_VARIABLE MACRO=PROBE_ATTACH_CHECK_NOW VARIABLE=attached VALUE="'{printer['gcode_macro PROBE_ATTACH_CHECK_NOW'].attached_default|string}'"
  {% endif %}
  {% if params.DETACHED is defined %}
    SET_GCODE_VARIABLE MACRO=PROBE_ATTACH_CHECK_NOW VARIABLE=detached VALUE="'{params.DETACHED|string}'"
  {% else %}
    SET_GCODE_VARIABLE MACRO=PROBE_ATTACH_CHECK_NOW VARIABLE=detached VALUE="'{printer['gcode_macro PROBE_ATTACH_CHECK_NOW'].detached_default|string}'"
  {% endif %}
  ## query endstops to refresh state
  {% if printer.configfile.settings.stepper_z.endstop_pin|string == "probe:virtaul_endstop" %}
    RESPOND PREFIX="info" MSG="Probe > using z endstop signal"
    QUERY_ENDSTOPS
    SET_GCODE_VARIABLE MACRO=PROBE_ATTACH_CHECK_NOW VARIABLE=use_probe VALUE="0"
  {% else %}
    RESPOND PREFIX="info" MSG="Probe > using probe signal"
    QUERY_PROBE
    SET_GCODE_VARIABLE MACRO=PROBE_ATTACH_CHECK_NOW VARIABLE=use_probe VALUE="1"
  {% endif %}
  ## next part
  PROBE_ATTACH_CHECK_STAGE_CHECK_ENDSTOP

[gcode_macro PROBE_ATTACH_CHECK_STAGE_CHECK_ENDSTOP]
gcode:
  {% if ( printer['gcode_macro PROBE_ATTACH_CHECK_NOW'].use_probe|int == 0 and printer.query_endstops.last_query['z']==1) or ( printer['gcode_macro PROBE_ATTACH_CHECK_NOW'].use_probe|int == 1 and printer.probe.last_query==1) %}
    ## either tripped or not attached
    ## move z up so that if the probe is touching the bed then we make sure it does not touch anything else
    {% if printer['gcode_macro HOMING_STATUS'].x|int != 1 %}
      RESPOND PREFIX="info" MSG="Home > Fake homing Z so it can move down prior to check if probe is attached"
      REAL_SET_KINEMATIC_POSITION Z=0
    {% endif %}
    RESPOND PREFIX="info" MSG="Home > Moving up {printer.configfile.settings.probe.sample_retract_dist} mm before homing"
    G91
    G0 Z{printer.configfile.settings.probe.sample_retract_dist}
    G90
    {% if printer['gcode_macro PROBE_ATTACH_CHECK_NOW'].use_probe|int == 0 %}
      QUERY_ENDSTOPS
    {% else %}
      QUERY_PROBE
    {% endif %}
    PROBE_ATTACH_CHECK_STAGE_RECHECK_ENDSTOP
  {% else %}
    ## attached
    {printer['gcode_macro PROBE_ATTACH_CHECK_NOW'].attached}
  {% endif %}
  
[gcode_macro PROBE_ATTACH_CHECK_STAGE_RECHECK_ENDSTOP]
gcode:
  ## undo previous move
  G91
  G0 Z{-1*printer.configfile.settings.probe.sample_retract_dist|float}
  G90
  ## now that we moved z up, if it's still 1 then there's no probe, if it's 0 there's a probe
  {% if ( printer['gcode_macro PROBE_ATTACH_CHECK_NOW'].use_probe|int == 0 and printer.query_endstops.last_query['z']==1) or ( printer['gcode_macro PROBE_ATTACH_CHECK_NOW'].use_probe|int == 1 and printer.probe.last_query==1) %}
    {printer['gcode_macro PROBE_ATTACH_CHECK_NOW'].detached}
  {% else %}
    {printer['gcode_macro PROBE_ATTACH_CHECK_NOW'].attached}
  {% endif %}
